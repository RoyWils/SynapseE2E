{
	"name": "Pipeline 1",
	"properties": {
		"activities": [
			{
				"name": "NDJSON_Ingestion_Claim",
				"type": "SynapseNotebook",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "Claim_Ingestion_NDJSON2Parquet",
						"type": "NotebookReference"
					},
					"parameters": {
						"StorageName": {
							"value": {
								"value": "@pipeline().parameters.StorageName",
								"type": "Expression"
							},
							"type": "string"
						},
						"DatasetSize": {
							"value": {
								"value": "@pipeline().parameters.DatasetSize",
								"type": "Expression"
							},
							"type": "string"
						}
					},
					"snapshot": true,
					"sparkPool": {
						"referenceName": {
							"value": "@pipeline().parameters.SparkPoolName",
							"type": "Expression"
						},
						"type": "BigDataPoolReference"
					},
					"executorSize": null,
					"conf": {
						"spark.dynamicAllocation.enabled": null,
						"spark.dynamicAllocation.minExecutors": null,
						"spark.dynamicAllocation.maxExecutors": null
					},
					"driverSize": null,
					"numExecutors": null
				}
			},
			{
				"name": "ClaimParquetFlatten_Large",
				"type": "SynapseNotebook",
				"dependsOn": [
					{
						"activity": "NDJSON_Ingestion_Claim",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebook": {
						"referenceName": "ClaimParquetFlatten_Large",
						"type": "NotebookReference"
					},
					"parameters": {
						"StorageName": {
							"value": {
								"value": "@pipeline().parameters.StorageName",
								"type": "Expression"
							},
							"type": "string"
						},
						"DatasetSize": {
							"value": {
								"value": "@pipeline().parameters.DatasetSize",
								"type": "Expression"
							},
							"type": "string"
						}
					},
					"snapshot": true,
					"sparkPool": {
						"referenceName": {
							"value": "@pipeline().parameters.SparkPoolName",
							"type": "Expression"
						},
						"type": "BigDataPoolReference"
					},
					"conf": {
						"spark.dynamicAllocation.enabled": null,
						"spark.dynamicAllocation.minExecutors": null,
						"spark.dynamicAllocation.maxExecutors": null
					},
					"numExecutors": null
				}
			},
			{
				"name": "ClaimDiagnosis2SQL",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Create Tables",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "ParquetSource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true,
							"wildcardFolderPath": {
								"value": "@concat('fhir/',pipeline().parameters.DatasetSize,'/Claim_diagnosis')",
								"type": "Expression"
							},
							"wildcardFileName": "*.parquet",
							"enablePartitionDiscovery": false
						}
					},
					"sink": {
						"type": "SqlDWSink",
						"allowCopyCommand": true,
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": true,
					"stagingSettings": {
						"linkedServiceName": {
							"referenceName": "StorageLS",
							"type": "LinkedServiceReference",
							"parameters": {
								"StorageName": {
									"value": "@pipeline().parameters.StorageName",
									"type": "Expression"
								}
							}
						},
						"path": "staging"
					}
				}
			},
			{
				"name": "ClaimInsurance2SQL",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Create Tables",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "ParquetSource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true,
							"wildcardFolderPath": {
								"value": "@concat('fhir/',pipeline().parameters.DatasetSize,'/Claim_insurance')",
								"type": "Expression"
							},
							"wildcardFileName": "*.parquet",
							"enablePartitionDiscovery": false
						}
					},
					"sink": {
						"type": "SqlDWSink",
						"allowCopyCommand": true,
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": true,
					"stagingSettings": {
						"linkedServiceName": {
							"referenceName": "StorageLS",
							"type": "LinkedServiceReference",
							"parameters": {
								"StorageName": {
									"value": "@pipeline().parameters.StorageName",
									"type": "Expression"
								}
							}
						},
						"path": "staging"
					}
				}
			},
			{
				"name": "ClaimProcedure2SQL",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Create Tables",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "ParquetSource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true,
							"wildcardFolderPath": {
								"value": "@concat('fhir/',pipeline().parameters.DatasetSize,'/Claim_procedure')",
								"type": "Expression"
							},
							"wildcardFileName": "*.parquet",
							"enablePartitionDiscovery": false
						}
					},
					"sink": {
						"type": "SqlDWSink",
						"allowCopyCommand": true,
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": true,
					"stagingSettings": {
						"linkedServiceName": {
							"referenceName": "StorageLS",
							"type": "LinkedServiceReference",
							"parameters": {
								"StorageName": {
									"value": "@pipeline().parameters.StorageName",
									"type": "Expression"
								}
							}
						},
						"path": "staging"
					}
				}
			},
			{
				"name": "Create Tables",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "ClaimParquetFlatten_Large",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": "IF NOT EXISTS (SELECT * FROM sys.schemas WHERE name='fhir')\n\tEXEC('CREATE SCHEMA [fhir]')\n\nIF OBJECT_ID('fhir.ClaimDiagnosis') IS NOT NULL\nBEGIN\n    DROP TABLE [fhir].[ClaimDiagnosis]\nEND\n\nCREATE TABLE [fhir].[ClaimDiagnosis]\n( \n\t[Claim_id] [nvarchar](64)  NULL,\n\t[diagnosis_reference] [nvarchar](64)  NULL,\n\t[diagnosis_sequence] [bigint]  NULL\n)\nWITH\n(\n\tDISTRIBUTION = HASH ( [Claim_id] ),\n\tCLUSTERED COLUMNSTORE INDEX\n)\n\nIF OBJECT_ID('fhir.ClaimInsurance') IS NOT NULL\nBEGIN\n    DROP TABLE [fhir].[ClaimInsurance]\nEND\n\nCREATE TABLE [fhir].[ClaimInsurance]\n( \n\t[Claim_id] [nvarchar](64)  NULL,\n\t[insurance_coverage.display] [nvarchar](64)  NULL,\n\t[insurance_focal] [bit]  NULL,\n\t[insurance_sequence] [bigint]  NULL\n)\nWITH\n(\n\tDISTRIBUTION = HASH ( [Claim_id] ),\n\tCLUSTERED COLUMNSTORE INDEX\n)\n\nIF OBJECT_ID('fhir.ClaimProcedure') IS NOT NULL\nBEGIN\n    DROP TABLE [fhir].[ClaimProcedure]\nEND\n\nCREATE TABLE [fhir].[ClaimProcedure]\n( \n\t[Claim_id] [nvarchar](64)  NULL,\n\t[procedure_reference] [nvarchar](64)  NULL,\n\t[procedure_sequence] [bigint]  NULL\n)\nWITH\n(\n\tDISTRIBUTION = HASH ( [Claim_id] ),\n\tCLUSTERED COLUMNSTORE INDEX\n)"
						}
					]
				}
			},
			{
				"name": "LakeDatabase And Table Creation",
				"type": "SynapseNotebook",
				"dependsOn": [
					{
						"activity": "ClaimParquetFlatten_Large",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"parameters": {
						"StorageName": {
							"value": {
								"value": "@pipeline().parameters.StorageName",
								"type": "Expression"
							},
							"type": "string"
						},
						"DatasetSize": {
							"value": {
								"value": "@pipeline().parameters.DatasetSize",
								"type": "Expression"
							},
							"type": "string"
						}
					},
					"snapshot": true,
					"sparkPool": {
						"referenceName": {
							"value": "@pipeline().parameters.SparkPoolName",
							"type": "Expression"
						},
						"type": "BigDataPoolReference"
					},
					"conf": {
						"spark.dynamicAllocation.enabled": null,
						"spark.dynamicAllocation.minExecutors": null,
						"spark.dynamicAllocation.maxExecutors": null
					},
					"numExecutors": null
				}
			}
		],
		"parameters": {
			"StorageName": {
				"type": "string",
				"defaultValue": "synapsee2elake"
			},
			"DatabaseName": {
				"type": "string",
				"defaultValue": "synapsee2edw"
			},
			"ServerName": {
				"type": "string",
				"defaultValue": "synapsee2e"
			},
			"SparkPoolName": {
				"type": "string",
				"defaultValue": "synapsee2espark"
			},
			"DatasetSize": {
				"type": "string",
				"defaultValue": "1tb"
			}
		},
		"folder": {
			"name": "Claims"
		},
		"annotations": []
	}
}